---
import {
  Image,
  type LocalImageProps,
  type RemoteImageProps,
} from 'astro:assets';

import Base from './base.astro';

export interface Props {
  title: string;
  subtitle?: string;
  action?: {
    label: string;
    href: string;
  };
  image: LocalImageProps | RemoteImageProps;
}

const { title, subtitle, action, image } = Astro.props;
---

<Base title={title} description={subtitle}>
  <div class="content">
    <header>
      <div>
        <h1 class="title">{title}</h1>
        <p class="subtitle">{subtitle}</p>
      </div>
      {
        action && (
          <a href={action.href} class="action">
            {action.label}
          </a>
        )
      }
    </header>

    <slot />
  </div>

  <!-- @ts-expect-error -->
  <Image
    {...image}
    widths={[400, 800, 1200, 1600, 2000]}
    sizes="(min-width: 56.25em) 50vw, 100vw"
    class="image"
  />
  <footer>
    <span class="copyright"
      >© 2024 <a href="https://connorbaer.com">Connor Bär</a>. All rights
      reserved.</span
    ><a href="/disclaimer">Disclaimer</a>
  </footer>
</Base>

<style>
  .content,
  footer {
    width: 100vw;
    padding: 0 12px;
    margin-top: 64px;
  }
  @media (min-width: 37.5em) {
    .content,
    footer {
      padding: 0 48px;
    }
  }
  @media (min-width: 56.25em) {
    .content,
    footer {
      width: 50vw;
      padding: 0 16px;
    }
  }
  @media (min-width: 75em) {
    .content,
    footer {
      padding: 0 48px;
    }
  }

  header {
    margin-top: 9vh;
    margin-bottom: 9vh;
  }
  @supports (margin: min(calc(12vh - 1rem), 6rem)) {
    header {
      margin-top: min(calc(12vh - 1rem), 6rem);
      margin-bottom: min(calc(12vh - 1rem), 6rem);
    }
  }

  .title,
  .subtitle {
    margin-top: var(---spacing-xxl);
    margin-bottom: var(---spacing-l);
    font-weight: var(--font-weight-bold);
    line-height: var(--line-height-s);
    overflow-wrap: break-word;
    hyphens: auto;
  }
  @media (min-width: 37.5em) {
    .title,
    .subtitle {
      overflow-wrap: normal;
      hyphens: none;
    }
  }

  .title {
    color: var(--color-primary);
    font-size: var(--font-size-xl);
  }
  @media (min-width: 37.5em) {
    .title {
      display: inline;
    }
    .title::after {
      content: ' ';
      display: inline;
    }
  }

  .subtitle {
    font-size: var(--font-size-l);
    font-weight: var(--font-weight-regular);
    color: var(--color-default);
    margin-top: var(--spacing-s);
  }
  @media (min-width: 37.5em) {
    .subtitle {
      font-size: var(--font-size-xl);
      display: inline;
      margin-top: 0;
    }
  }

  .action {
    display: inline-block;
    text-decoration: none;
    color: var(--color-primary);
    background-color: var(--background-subtle);
    font-weight: var(--font-weight-bold);
    line-height: var(--line-height-s);
    padding: 12px 16px;
    margin-top: 16px;
    text-align: center;
    border: none;
    border-radius: 12px;
    transition:
      color var(--transition-micro),
      background-color var(--transition-micro);
  }

  .action:hover {
    color: white;
    background-color: var(--color-primary);
  }

  .image {
    display: none;
  }
  @media (min-width: 56.25em) {
    .image {
      display: block;
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      width: 50vw;
      height: 100vh;
      object-fit: cover;
    }
  }

  footer {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--background-subtle);
    padding: 1rem;
  }

  .copyright::after {
    content: '·';
    display: inline-block;
    font-weight: var(--font-weight-bold);
    padding-right: var(--spacing-s);
    padding-left: var(--spacing-s);
  }
</style>
